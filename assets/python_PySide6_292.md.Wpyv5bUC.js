import{_ as t,c as e,o as d,a5 as r}from"./chunks/framework.DcfbuPOr.js";const a="/assets/image-46.BucFBPbq.png",T=JSON.parse('{"title":"QTreeWidget树","description":"","frontmatter":{},"headers":[],"relativePath":"python/PySide6/292.md","filePath":"python/PySide6/292.md"}'),i={name:"python/PySide6/292.md"},o=r('<h1 id="qtreewidget树" tabindex="-1">QTreeWidget树 <a class="header-anchor" href="#qtreewidget树" aria-label="Permalink to &quot;QTreeWidget树&quot;">​</a></h1><p>QTreeWidget树控件，它提供了一个使用预定义树模型的树视图，它的每一个树节点都是一个QTreeWidgetItem。</p><p>由于QTreeWidget类继承自QTreeView，因此，它具有QTreeView的所有公共方法，另外，它还提供了一些自身特有的方法。</p><h2 id="qtreewidget类的常用方法" tabindex="-1">QTreeWidget类的常用方法 <a class="header-anchor" href="#qtreewidget类的常用方法" aria-label="Permalink to &quot;QTreeWidget类的常用方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>addTopLevelltem()</td><td>添加顶级节点</td></tr><tr><td>insertTopLevelltems()</td><td>在树的顶层索引中插入节点</td></tr><tr><td>invisibleRootItem()</td><td>获取树控件中不可见的根选项</td></tr><tr><td>setColumnCount()</td><td>设置要显示的列数</td></tr><tr><td>setColumnWidth()</td><td>设置列的宽度</td></tr><tr><td>selectedItems()</td><td>获取选中的树节点</td></tr></tbody></table><h2 id="qtreewidgetitem类的常用方法" tabindex="-1">QTreeWidgetItem类的常用方法 <a class="header-anchor" href="#qtreewidgetitem类的常用方法" aria-label="Permalink to &quot;QTreeWidgetItem类的常用方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>addChild()</td><td>添加子节点</td></tr><tr><td>setText()</td><td>设置节点的文本</td></tr><tr><td>setCheckState()</td><td>设置指定节点的选中状态，取值如下。<br>Qt.Checked:节点选中;<br>Qt.Unchecked:节点未选中</td></tr><tr><td>setIcon()</td><td>为节点设置图标</td></tr><tr><td>text()</td><td>获取节点的文本</td></tr></tbody></table><p><img src="'+a+'" alt="alt text" loading="lazy"></p>',8),s=[o];function n(h,l,c,_,g,m){return d(),e("div",null,s)}const b=t(i,[["render",n]]);export{T as __pageData,b as default};
