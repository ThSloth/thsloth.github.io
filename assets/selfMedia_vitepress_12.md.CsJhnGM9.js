import{_ as t,c as a,o as e,a4 as s}from"./chunks/framework.-IC5Nebq.js";const i="/assets/image.CRZxz6mS.png",o="/assets/image-1.sQZL7Qp7.png",l="/assets/image-2.s7CQFuaz.png",c="/assets/image-3.D5U-b0IB.png",d="/assets/image-4.mMDmtDZ0.png",v=JSON.parse('{"title":"GitHub部署学习","description":"","frontmatter":{},"headers":[],"relativePath":"selfMedia/vitepress/12.md","filePath":"selfMedia/vitepress/12.md"}'),p={name:"selfMedia/vitepress/12.md"},n=s('<h1 id="github部署学习" tabindex="-1">GitHub部署学习 <a class="header-anchor" href="#github部署学习" aria-label="Permalink to &quot;GitHub部署学习&quot;">​</a></h1><p>部署在GitHub Pages，之后可发布到其他社交平台，或者仅自己保存，翻阅学习。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>确保你已经创建了 VitePress 项目并进行了基本的配置和开发。并且，你的项目可以正常地在本地运行和预览。</p></div><h2 id="创建github仓库" tabindex="-1">创建GitHub仓库 <a class="header-anchor" href="#创建github仓库" aria-label="Permalink to &quot;创建GitHub仓库&quot;">​</a></h2><p>在 GitHub 上创建一个新的仓库，命名为 &lt;username&gt;.github.io。</p><p>其中 &lt;username&gt; 是你的 GitHub 用户名。这个特殊命名的仓库用于托管 GitHub Pages 的内容。</p><p><img src="'+i+'" alt="alt text" loading="lazy"></p><h2 id="构建项目" tabindex="-1">构建项目 <a class="header-anchor" href="#构建项目" aria-label="Permalink to &quot;构建项目&quot;">​</a></h2><p>VitePress 项目终端中执行</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="上传至git" tabindex="-1">上传至Git <a class="header-anchor" href="#上传至git" aria-label="Permalink to &quot;上传至Git&quot;">​</a></h2><p>将项目构建之后生成的<code>dist</code> 文件夹中的内容，路径为 <code>你的项目\\docs\\.vitepress\\dist </code>，不包括 <code>dist</code> 文件夹，提交到刚创建的仓库。</p><p><img src="'+o+'" alt="alt text" loading="lazy"><img src="'+l+'" alt="alt text" loading="lazy"></p><h2 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h2><p><img src="'+c+'" alt="alt text" loading="lazy"><img src="'+d+'" alt="alt text" loading="lazy"></p><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">部署后，访问链接后，发现样式未生效</p><p>检查项目config.mts文件中，是否配置<code>base</code>属性。</p><p>如果有配置，那么要确保<code>base</code>属性的字段和github仓库名保持一致。</p></div><div class="tip custom-block"><p class="custom-block-title">部署后，发现链接为<code>https://你的仓库名.github.io/你的项目名/</code></p><p>如果在项目config.mts文件中，配置了<code>base</code>属性，以及git仓库名命名和<code>base</code>属性的字段保持一致。</p><p>那么可能会出现该情况。</p><p>如果想部署后的访问链接为<code>https://你的仓库名.github.io/</code>，可以省略配置<code>base</code>属性，以及git仓库，命名为 &lt;username&gt;.github.io。</p><p>其中 &lt;username&gt; 是你的 GitHub 用户名</p></div>',18),r=[n];function h(u,b,g,m,_,k){return e(),a("div",null,r)}const x=t(p,[["render",h]]);export{v as __pageData,x as default};
