import{_ as t,c as e,o as d,a5 as a}from"./chunks/framework.DcfbuPOr.js";const r="/assets/image-37.DF6QlCrD.png",i="/assets/image-36.DQwIqiH7.png",y=JSON.parse('{"title":"QCalendarWidget日历","description":"","frontmatter":{},"headers":[],"relativePath":"python/PySide6/252.md","filePath":"python/PySide6/252.md"}'),n={name:"python/PySide6/252.md"},s=a('<h1 id="qcalendarwidget日历" tabindex="-1">QCalendarWidget日历 <a class="header-anchor" href="#qcalendarwidget日历" aria-label="Permalink to &quot;QCalendarWidget日历&quot;">​</a></h1><p>CalendarWidget控件又称为日历控件，主要用来显示和选择日期。</p><p>Display Widgets —&gt; Calendar Edit</p><h2 id="qcalendarwidget类的常用方法" tabindex="-1">QCalendarWidget类的常用方法 <a class="header-anchor" href="#qcalendarwidget类的常用方法" aria-label="Permalink to &quot;QCalendarWidget类的常用方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>setSelectedDate()</td><td>设置选中的日期，默认为当前日期</td></tr><tr><td>setMinimumDate()</td><td>设置最小日期，默认为1752/9/14</td></tr><tr><td>setMaximumDate()</td><td>设置最大日期，默认为9999/12/31</td></tr><tr><td>setFirstDayOfWeek()</td><td>设置一周的第一天，取值如下。<br>Qt.Monday:星期一;<br>Qt.Tuesday:星期二;<br>Qt.Wednesday:星期三;<br>Qt.Thursday:星期四;<br>Qt.Friday:星期五;<br>Qt.Saturday:星期六;<br>Qt.Sunday:星期日</td></tr><tr><td>setGridVisible()</td><td>设置是否显示网格线</td></tr><tr><td>setSelectionMode()</td><td>设置选择模式，取值如下。<br>QCalendarWidget.NoSelection:不能选中日期<br>QCalendarWidget.SingleSelection:可以选中一个日期</td></tr><tr><td>setHorizontalHeaderFormat()</td><td>QCalendarWidget.LongDayNames:完整天的名称，如“星期一”</td></tr><tr><td>setVerticalHeaderFormat()</td><td>设置对齐方式，有水平和垂直两种，分别如下。<br>QCalendarWidget.NoVerticalHeader:不显示垂直头部;<br>QCalendarWidget.IsOWeekNumbers:以星期数字显示垂直头部</td></tr><tr><td>setNavigationBarVisible()</td><td>设置是否显示导航栏</td></tr><tr><td>setDateEditEnabled()</td><td>设置是否可以编辑日期</td></tr><tr><td>setDateEditAcceptDelay()</td><td>设置编辑日期的最长间隔，默认为1500</td></tr><tr><td>selectedDate()</td><td>获取选择的日期，返回值为QDate类型</td></tr></tbody></table><p><img src="'+r+'" alt="alt text" loading="lazy"></p><p><img src="'+i+'" alt="alt text" loading="lazy"></p>',7),l=[s];function o(c,g,_,p,h,m){return d(),e("div",null,l)}const Q=t(n,[["render",o]]);export{y as __pageData,Q as default};
