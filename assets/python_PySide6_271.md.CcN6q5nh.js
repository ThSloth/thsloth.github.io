import{_ as t,c as d,o as e,a5 as a}from"./chunks/framework.DcfbuPOr.js";const r="/assets/image-38.9wjlWH_f.png",m=JSON.parse('{"title":"QMenuBar菜单栏","description":"","frontmatter":{},"headers":[],"relativePath":"python/PySide6/271.md","filePath":"python/PySide6/271.md"}'),n={name:"python/PySide6/271.md"},o=a('<h1 id="qmenubar菜单栏" tabindex="-1">QMenuBar菜单栏 <a class="header-anchor" href="#qmenubar菜单栏" aria-label="Permalink to &quot;QMenuBar菜单栏&quot;">​</a></h1><p>在PyQt6中，菜单栏使用QMenuBar类表示，它分为两部分：主菜单和菜单项，其中，主菜单被显示为一个QMenu类，而菜单项则使</p><p>用QAciton类表示。一个QMenu中可以包含任意多个QAction对象，也可以包含另外的QMenu，用来表示级联菜单。</p><p><img src="'+r+'" alt="alt text" loading="lazy"></p><p>QMenuBar类是所有窗口的菜单栏。</p><h2 id="qmenubar类的常用方法" tabindex="-1">QMenuBar类的常用方法 <a class="header-anchor" href="#qmenubar类的常用方法" aria-label="Permalink to &quot;QMenuBar类的常用方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>addAction()</td><td>添加菜单项</td></tr><tr><td>addMenu()</td><td>添加菜单</td></tr><tr><td>addActions()</td><td>添加多个菜单项</td></tr><tr><td>addSeparator()</td><td>添加分割线</td></tr></tbody></table><h2 id="qmenu类的常用方法" tabindex="-1">QMenu类的常用方法 <a class="header-anchor" href="#qmenu类的常用方法" aria-label="Permalink to &quot;QMenu类的常用方法&quot;">​</a></h2><p>QMenu类表示菜单栏中的菜单，可以显示文本和图标，但是并不负责执行操作，类似Label的作用。</p><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>addAction()</td><td>添加菜单项</td></tr><tr><td>setTitle()</td><td>设置菜单的文本</td></tr><tr><td>addMenu()</td><td>添加菜单</td></tr><tr><td>title()</td><td>获取菜单的标题文本</td></tr><tr><td>addSeparator()</td><td>添加分割线</td></tr></tbody></table><h2 id="qaction类的常用方法" tabindex="-1">QAction类的常用方法 <a class="header-anchor" href="#qaction类的常用方法" aria-label="Permalink to &quot;QAction类的常用方法&quot;">​</a></h2><p>QAction类是菜单项。PyQt6将用户与界面进行交互的元素抽象为一种“动作” ，使用QAction类表示。</p><p>QAction才是真正负责执行操作的部件。</p><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>setIcon()</td><td>设置菜单项图标</td></tr><tr><td>setShortcut()</td><td>设置快捷键</td></tr><tr><td>setIconVisibleInMenu()</td><td>设置图标是否显示</td></tr><tr><td>setToolTip()</td><td>设置提示文本</td></tr><tr><td>setText()</td><td>添加菜单项文本</td></tr><tr><td>setEnabled()</td><td>设置菜单项是否可用</td></tr><tr><td>setIconText()</td><td>设置图标文本</td></tr><tr><td>text()</td><td>获取菜单项的文本</td></tr></tbody></table>',14),s=[o];function i(h,c,l,u,p,_){return e(),d("div",null,s)}const Q=t(n,[["render",i]]);export{m as __pageData,Q as default};
