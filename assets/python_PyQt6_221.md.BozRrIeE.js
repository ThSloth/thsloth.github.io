import{_ as t,c as o,o as e,a5 as a}from"./chunks/framework.DcfbuPOr.js";const n="/assets/image-19.C_f8AYdA.png",c="/assets/image-21.B9-YrIPu.png",b=JSON.parse('{"title":"QPushButton按钮控件","description":"","frontmatter":{},"headers":[],"relativePath":"python/PyQt6/221.md","filePath":"python/PyQt6/221.md"}'),i={name:"python/PyQt6/221.md"},l=a('<h1 id="qpushbutton按钮控件" tabindex="-1">QPushButton按钮控件 <a class="header-anchor" href="#qpushbutton按钮控件" aria-label="Permalink to &quot;QPushButton按钮控件&quot;">​</a></h1><p>QPushButton是按钮控件，允许用户通过单击来执行操作。</p><p>QPushButton控件既可以显示文本，也可以显示图像，当该控件被单击时，它看起来像是被按下，然后</p><p>被释放。</p><h2 id="qabstractbutton-类属性" tabindex="-1">QAbstractButton 类属性 <a class="header-anchor" href="#qabstractbutton-类属性" aria-label="Permalink to &quot;QAbstractButton 类属性&quot;">​</a></h2><ul><li><p><code>text</code> 显示文本</p></li><li><p><code>icon</code> 设置图标</p></li><li><p><code>iconSize</code> 图标大小</p></li><li><p><code>shortcut</code> 设置快捷键</p></li><li><p><code>checkable</code> 设置是否自动切换按钮</p></li><li><p><code>checked</code> 设置默认选中状态</p></li><li><p><code>autoRepeat</code> 设置是否会在用户按下时自动重复</p></li><li><p><code>autoExclusive</code> 设置是否启用自动排他性(设置这个可以变成多选)</p></li><li><p><code>autoRepeatDelay</code> 自动重复的初始延迟(以毫秒为单位)</p></li><li><p><code>autoRepeatInterval</code> 自动重复的时间间隔(以毫秒为单位)</p></li></ul><p><code>QCheckBox</code>,<code>QCheckBox</code>,<code>QCheckBox</code>,<code>QCheckBox</code> 这四个子类都拥有QAbstractButton的上述属性功能</p><h2 id="qpushbutton-类属性" tabindex="-1">QPushButton 类属性 <a class="header-anchor" href="#qpushbutton-类属性" aria-label="Permalink to &quot;QPushButton 类属性&quot;">​</a></h2><p>Buttons -&gt; Push Button</p><ul><li><p><code>autoDefault</code> 将按钮设置为对话框中的默认按钮</p></li><li><p><code>default</code> 设置按钮的默认状态</p></li><li><p><code>flat</code> 扁平化</p></li></ul><p><img src="'+n+'" alt="alt text" loading="lazy"></p><h1 id="qcommandlinkbutton命令链接按钮" tabindex="-1">QCommandLinkButton命令链接按钮 <a class="header-anchor" href="#qcommandlinkbutton命令链接按钮" aria-label="Permalink to &quot;QCommandLinkButton命令链接按钮&quot;">​</a></h1><p>CommandLinkButton对应类为QCommandLinkButton，实际上是从pushButton继承过来的一种按钮， 外观像是一个被设置了扁平化的 QPushButton，与PushButton不同主要有如下：</p><ul><li><p>可以在按钮上显示双行文本，首行是QAbstractButton的text显示，次行类似于副标题，是通过CommandLinkButton的description属性来设置的；</p></li><li><p>默认情况下，它还会带有一个向右的箭头图标，该图标实际上就是QAbstractButton的ICon设置图标，只是填了一个右箭头作为缺省值；</p></li><li><p>默认类似于一个扁平化自动凸起的按钮。</p></li></ul><p><img src="'+c+'" alt="alt text" loading="lazy"></p>',15),p=[l];function u(d,s,r,h,m,_){return e(),o("div",null,p)}const Q=t(i,[["render",u]]);export{b as __pageData,Q as default};
