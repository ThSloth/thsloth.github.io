import{_ as t,c as e,o as d,a5 as r}from"./chunks/framework.DcfbuPOr.js";const o="/assets/image-45.zuQqsJBy.png",m=JSON.parse('{"title":"QTreeView树视图","description":"","frontmatter":{},"headers":[],"relativePath":"python/PyQt6/291.md","filePath":"python/PyQt6/291.md"}'),i={name:"python/PyQt6/291.md"},l=r('<h1 id="qtreeview树视图" tabindex="-1">QTreeView树视图 <a class="header-anchor" href="#qtreeview树视图" aria-label="Permalink to &quot;QTreeView树视图&quot;">​</a></h1><p>树控件可以为用户显示节点层次结构，而每个节点又可以包含子节点，包含子节点的节点叫父节点，在设计树形结构（如导航菜单等）时，非常方便。</p><p>QTreeView是一个可以显示树形数据结构的小部件。QTreeWidget是QTreeView的封装，它在QTreeView的基础上添加了一些额外的功能，如添加、删除和编辑项目等。因此，QTreeWidget更为易用，而QTreeView更灵活。</p><p>QTreeView类，它是树控件的基类，使用时，必须为其提供一个模型来与之配合。</p><h2 id="qtreeview类的常用方法" tabindex="-1">QTreeView类的常用方法 <a class="header-anchor" href="#qtreeview类的常用方法" aria-label="Permalink to &quot;QTreeView类的常用方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>autoExpandDelay()</td><td>获取自动展开节点所需的延时时间</td></tr><tr><td>collapse()</td><td>收缩指定级的节点</td></tr><tr><td>collapseAll()</td><td>收缩所有节点</td></tr><tr><td>expand()</td><td>展开指定级的节点</td></tr><tr><td>expandAll()</td><td>展开所有节点</td></tr><tr><td>header()</td><td>树的头信息，常用的有一个setVisible(方法，用来设置是否显示头</td></tr><tr><td>isHeaderHidder()</td><td>判断是否隐藏头部</td></tr><tr><td>setAutoExpandDelay()</td><td>设置自动展开的延时时间，单位为毫秒，如果值小于0，表示禁用自动展开</td></tr><tr><td>setAlternatingRowColors()</td><td>设置每间隔一行颜色是否一样</td></tr><tr><td>setExpanded()</td><td>根据索引设置是否展开节点</td></tr><tr><td>setHeaderHidden()</td><td>设置是否隐藏头部</td></tr><tr><td>setItemsExpandable()</td><td>设置项是否展开</td></tr><tr><td>setModel()</td><td>设置要显示的数据模型</td></tr><tr><td>setSortingEnabled()</td><td>设置单击头部时是否可以排序</td></tr><tr><td>setVerticalScrollBarPolicy()</td><td>设置是否显示垂直滚动条</td></tr><tr><td>setHorizontalScrollBarPolicy()</td><td>设置是否显示水平滚动条</td></tr><tr><td>setEditTriggers()</td><td>设置默认的编辑触发器</td></tr><tr><td>setExpandsOnDoubleClick()</td><td>设置是否支持双击展开树节点</td></tr><tr><td>setWordWrap()</td><td>设置自动换行</td></tr><tr><td>sclectionModel()</td><td>获取选中的模型</td></tr><tr><td>sortByColumn()</td><td>根据列排序</td></tr><tr><td>setSelectionMode()</td><td>设置选中模式，取值如下。<br>QAbstractItemView.NoSelection:不能选择;<br>QAbstractItemView.SingleSelection:单选;<br>QAbstractItemView.MultiSelection:多选;<br>QAbstractItemView.ExtendedSelection:正常单选，按Ctrl或者Shift键后，可以多选;<br>QAbstractItemView.ContiguousSelection:与<br>ExtendedSelection类似</td></tr><tr><td>setSelectionBehavior()</td><td>设置选中方式，取值如下。<br>QAbstractItemView.SelectItems:选中当前项;<br>QAbstractItemView.SelectRows:选中整行;<br>QAbstractItemView.SelectColumns:选中整列</td></tr></tbody></table><p><code>QTreeView</code> <strong>类属性</strong></p><ul><li><p><code>autoExpandDelay</code> 拖放操作期间打开树中项目之前的延迟时间</p></li><li><p><code>indentation</code> 树视图中项目的缩进</p></li><li><p><code>rootIsDecorated</code> 是否显示用于展开和折叠顶级项目的控件</p></li><li><p><code>uniformRowHeights</code> 所有项目是否具有相同的高度</p></li><li><p><code>itemsExpandable</code> 项目是否可由用户展开</p></li><li><p><code>animated</code> 是否启用动画</p></li><li><p><code>allColumnsShowFocus</code> 项目是否应使用所有列显示键盘焦点</p></li><li><p><code>wordWrap</code> 文本自动换行策略</p></li><li><p><code>headerHidden</code> 标头是否显示</p></li><li><p><code>expandsOnDoubleClick</code> 是否可以通过双击扩展项目</p></li></ul><p>QTreeWidget <strong>类属性</strong></p><ul><li><code>columnCount</code> 显示的列数</li></ul><p>Header <strong>属性</strong></p><ul><li><p><code>headerVisible</code> 是否显示标题</p></li><li><p><code>headerCascadingSectionResizes</code> 标题列宽联动调整大小</p></li><li><p><code>headerDefaultSectionSize</code> 默认标题列宽大小</p></li><li><p><code>headerHighlightSections</code> 所选项目的部分是否突出显示</p></li><li><p><code>headerMinimumSectionSize</code> 标题可调节的最小尺寸</p></li><li><p><code>headerShowSortIndicator</code> 标题显示排序指示器</p></li><li><p><code>headerStretchLastSection</code> 是否可调节最后一列的宽度</p></li></ul><table tabindex="0"><thead><tr><th><strong>模型</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>QStringListModel</td><td>存储简单的字符串列表</td></tr><tr><td>QStandardItemModel</td><td>可以用于树结构的存储，提供了层次数据</td></tr><tr><td>QFileSystemModel</td><td>存储本地系统的文件和目录信息（针对当前项目）</td></tr><tr><td>QSqlQueryModel</td><td>存储SQL的查询结构集</td></tr><tr><td>QSqlTableModel</td><td>存储SQL中的表格数据</td></tr><tr><td>QSqlRelationalTableModel</td><td>存储有外键关系的SOL表格数据</td></tr><tr><td>QSortFilterProxyModel</td><td>对模型中的数据进行排序或者过滤</td></tr></tbody></table><p><img src="'+o+'" alt="alt text" loading="lazy"></p>',14),a=[l];function c(n,s,p,h,S,b){return d(),e("div",null,a)}const u=t(i,[["render",c]]);export{m as __pageData,u as default};
