import{_ as t,c as e,o as d,a5 as i}from"./chunks/framework.DcfbuPOr.js";const o="/assets/image-27.gaDpSaw6.png",p=JSON.parse('{"title":"QListWidget列表","description":"","frontmatter":{},"headers":[],"relativePath":"python/PySide6/233.md","filePath":"python/PySide6/233.md"}'),r={name:"python/PySide6/233.md"},s=i('<h1 id="qlistwidget列表" tabindex="-1">QListWidget列表 <a class="header-anchor" href="#qlistwidget列表" aria-label="Permalink to &quot;QListWidget列表&quot;">​</a></h1><p><code>PyQt6</code>提供了两种列表，分别是<code>QListWidget</code>和<code>QListView</code>，其中，<code>QListView</code>是基于模型的，它是<code>QListWidget</code>的父类，使用<code>QListView</code>时，首先需要建立模型，然后再保存数据；</p><p>而<code>QListWidget</code>是<code>QListView</code>的升级版本，它已经内置了一个数据存储模型<code>QListWidgetItem</code>，我们在使用时，不必自己建立模型，而直接使用<code>addItem()</code>或者<code>addItems()</code>方法即可添加列表项。所以在实际开发时，推荐使用<code>QListWidget</code>控件作为列表</p><p>item Widgets(item-Based) -&gt; Font Combo Box</p><h2 id="qlistwidget常用方法" tabindex="-1">QListWidget常用方法 <a class="header-anchor" href="#qlistwidget常用方法" aria-label="Permalink to &quot;QListWidget常用方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>addItem()</td><td>向列表中添加项</td></tr><tr><td>addItems()</td><td>一次向列表中添加多项</td></tr><tr><td>insertItem()</td><td>在指定索引处插入项</td></tr><tr><td>setCurrentItem()</td><td>设置当前选择项</td></tr><tr><td>item.setToolTip()</td><td>设置提示内容</td></tr><tr><td>item.isSelected()</td><td>判断项是否选中</td></tr><tr><td>setSelectionMode()</td><td>设置列表的选择模式，支持以下5种模式。<br>QAbstractItemView.NoSelection:不能选择;<br>QAbstractItemView.SingleSelection:单选;<br>QAbstractItemView.MultiSelection:多选;<br>QAbstractItemView.ExtendedSelection:正常单选，按Ctrl或者Shift键<br>后，可以多选;<br>QAbstractltemView.ContiguousSelection:与 ExtendedSelection类似</td></tr><tr><td>setSelectionBehavior()</td><td>设置选择项的方式，支持以下3种方式。<br>QAbstractItemView.SelectItems:选中当前项;<br>QAbstractltemView.SelectRows:选中整行;<br>OAbstractltemView.SelectColumns:选中整列</td></tr><tr><td>setWordWrap()</td><td>设置是否自动换行，True表示自动换行，False表示不自动换行</td></tr><tr><td>setViewMode()</td><td>设置显示模式，有以下两种显示模式。<br>QListView.ListMode:以列表形式显示;<br>QListView.IconMode:以图表形式显示</td></tr><tr><td>item.text()</td><td>获取项的文本</td></tr><tr><td>clear()</td><td>删除所有列表项</td></tr></tbody></table><p><img src="'+o+'" alt="alt text" loading="lazy"></p>',7),a=[s];function c(n,l,m,_,b,g){return d(),e("div",null,a)}const Q=t(r,[["render",c]]);export{p as __pageData,Q as default};
